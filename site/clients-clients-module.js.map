{"version":3,"sources":["./src/app/clients/clients-list/clients-list.component.ts","./src/app/clients/clients-list/clients-list.component.html","./src/app/clients/clients.module.ts","./src/app/clients/new-client/new-client.component.ts","./src/app/clients/new-client/new-client.component.html","./src/app/clients/clients-routing.module.ts"],"names":[],"mappings":"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","file":"clients-clients-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { Client } from '../client';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-clients-list',\n  templateUrl: './clients-list.component.html',\n  styleUrls: ['./clients-list.component.scss']\n})\nexport class ClientsListComponent implements OnInit {\n\n  clients: Client[] = [];\n  filteredClients: Client[] = [];\n  showNoResults: boolean = false;\n  searchTerm: string = '';\n  constructor(private http: HttpClient) {}\n  ngOnInit(): void {\n    this.getClients();\n  }\n  filterClients() {\n    const searchTermTrimmed = this.searchTerm.trim().toLowerCase();\n    this.filteredClients = this.clients.filter(\n      (client) =>\n      client.name.toLowerCase().includes(searchTermTrimmed) || // buscar por nombre\n      client.lastname.toLowerCase().includes(searchTermTrimmed) || // buscar por descripcion\n      client.ci.toLowerCase().includes(searchTermTrimmed) // buscar por descripcion\n    );\n    if (this.filteredClients.length === 0) {\n      this.showNoResults = true;\n    } else {\n      this.showNoResults = false;\n    }\n  }\n  getClients() {\n    this.http.get(environment.apiEndpoint + '/clients').subscribe(\n      (response: any) => {\n        // Manejar la respuesta del servidor\n        this.clients = response; // respuesta del servidor\n        this.clients.sort(function (a, b) {\n          if (a.name > b.name) {\n            return 1;\n          }\n          if (a.name < b.name) {\n            return -1;\n          }\n          return 0;\n        }); // ordenar por name\n        this.filteredClients = this.clients; // listado para el buscador\n        console.log(this.filteredClients);\n\n      },\n      (error) => {\n        console.error(error); // Manejar el error en caso de que ocurra\n      }\n    );\n  }\n  onDelete(id: number) {\n    Swal.fire({\n      title: 'Do you want to delete this row?',\n      icon: 'info',\n      showCancelButton: true,\n      confirmButtonText: 'Delete',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.http.delete(environment.apiEndpoint + '/clients/' + id).subscribe(\n          () => {\n            Swal.fire('Deleted!', '', 'success');\n            this.getClients();\n          },\n          (error) => console.error(error)\n        );\n      }\n    });\n  }\n\n\n}\n","<div class=\"container\">\n  <div class=\"d-flex justify-content-between mb-4 mt-4\">\n    <h2>Clientes</h2>\n    <button class=\"btn btn-primary\" routerLink=\"new\">Crear Nuevo</button>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <input\n        *ngIf=\"clients.length > 0\"\n        type=\"text\"\n        [(ngModel)]=\"searchTerm\"\n        placeholder=\"Buscar cliente...\"\n        (keyup)=\"filterClients()\"\n        class=\"form-control shadow-sm mb-3\"\n      />\n      <!--Vista Lista-->\n      <!-- <div class=\"row\" *ngIf=\"clients && clients.length\">\n        <div class=\"col-md-12\">\n          <div class=\"list-group\">\n            <div\n              class=\"list-group-item d-flex align-items-center p-3\"\n              *ngFor=\"let client of filteredClients\"\n            >\n              <div class=\"container\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <div class=\"w-100\">\n                      <h5 class=\"mt-2\">\n                        {{ client.name }} {{ client.lastname }} -\n                        {{ client.ci }}\n                      </h5>\n                    </div>\n                  </div>\n                  <div class=\"col-4 d-flex justify-content-end\">\n\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-primary m-1\"\n                      [routerLink]=\"['edit', client.id]\"\n                    >\n                      Editar\n                    </button>\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-secondary m-1\"\n                      (click)=\"onDelete(client.id)\"\n                    >\n                      Eliminar\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div> -->\n      <!--Vista Tabla-->\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Nombre Cliente</th>\n            <th scope=\"col\">CI</th>\n            <th scope=\"col\">Deuda Pendiente</th>\n            <th scope=\"col\">Acciones</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let client of filteredClients\">\n            <td>{{ client.name }} {{ client.lastname }}</td>\n            <td>{{ client.ci }}</td>\n            <td *ngIf=\"!client.hasdebt\">\n              <span class=\"badge bg-success\">Sin Deuda Pendiente</span>\n            </td>\n            <td *ngIf=\"client.hasdebt\">\n              <span class=\"badge bg-danger\">Deuda Pendiente</span>\n            </td>\n            <td>\n              <button\n                type=\"button\"\n                class=\"btn btn-primary m-1\"\n                [routerLink]=\"['edit', client.id]\"\n              >\n                Editar\n              </button>\n              <!-- <button\n                type=\"button\"\n                class=\"btn btn-secondary m-1\"\n                (click)=\"onDelete(client.id)\"\n              >\n                Eliminar\n              </button> -->\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <!--Datos no encontrados-->\n      <div *ngIf=\"showNoResults\">\n        No se encontraron resultados para \"{{ searchTerm }}\".\n      </div>\n      <div class=\"row\" *ngIf=\"!clients || !clients.length\">\n        <div class=\"col-md-12\">\n          <p>No se encontraron productos.</p>\n        </div>\n      </div>\n      <!--Datos no encontrados-->\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ClientsRoutingModule } from './clients-routing.module';\r\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\r\nimport { ClientsListComponent } from './clients-list/clients-list.component';\r\nimport { NewClientComponent } from './new-client/new-client.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ClientsListComponent, NewClientComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ClientsRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class ClientsModule { }\r\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-new-client',\n  templateUrl: './new-client.component.html',\n  styleUrls: ['./new-client.component.scss']\n})\nexport class NewClientComponent implements OnInit {\n  form: FormGroup;\n  title = 'Registrar Nuevo Cliente'\n  name = '';\n  imageurl = '';\n  description = '';\n  quantity = 0;\n  isNew: boolean = true;\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private http: HttpClient\n  ) {\n    this.form = fb.group({\n      id: [0],\n      name: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      ci: ['', [Validators.required]],\n    });\n  }\n\n  ngOnInit(): void {\n    this.title = 'Registrar Nuevo Cliente'\n    let id = this.route.snapshot.paramMap.get('id');\n    if (id) {\n      this.isNew = false;\n      this.title = 'Editar Cliente'\n      this.http.get(environment.apiEndpoint + '/clients/' + id).subscribe(\n        (response: any) => {\n          // Manejar la respuesta del servidor\n          this.form.patchValue({\n            id: response.id,\n            name: response.name,\n            lastName: response.lastname,\n            ci: response.ci,\n          }); // datos id\n        },\n        (error) => {\n          console.error(error); // Manejar el error en caso de que ocurra\n        }\n      );\n    }\n  }\n\n  onSubmit() {\n    if (this.isNew) {\n      // post new client\n      // Enviar los datos al servidor para grabar en la base de datos\n      this.http\n        .post(environment.apiEndpoint + '/clients', this.form.value)\n        .subscribe(\n          (res) => {\n            //exito\n            Swal.fire({\n              icon: 'success',\n              title: 'Saved!',\n              text: '',\n            });\n            this.router.navigate(['/clients']);\n          },\n          (error) => {\n            console.error(error);\n            // error\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'Something went wrong!',\n            });\n          }\n        );\n    } else {\n      // edit exist client\n      this.http\n        .put(\n          environment.apiEndpoint + '/clients/' + this.form.value.id,\n          this.form.value\n        )\n        .subscribe(\n          (res) => {\n            //exito\n            Swal.fire({\n              icon: 'success',\n              title: 'Edited!',\n              text: '',\n            });\n            this.router.navigate(['/clients']);\n          },\n          (error) => console.error(error)\n        );\n    }\n  }\n}\n","<div class=\"container mt-4 w-100\">\r\n  <div class=\"d-flex justify-content-between mb-4 mt-4\">\r\n    <h2>{{title}}</h2>\r\n  </div>\r\n  <form class=\"card p-3\" [formGroup]=\"form\" (submit)=\"onSubmit()\">\r\n    <div class=\"mb-3\">\r\n      <label class=\"form-label\">Nombres</label>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        [(ngModel)]=\"form.value.name\"\r\n        name=\"name\"\r\n        formControlName=\"name\"\r\n        required\r\n      />\r\n    </div>\r\n    <div class=\"mb-3\">\r\n      <label class=\"form-label\">Apellidos</label>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        [(ngModel)]=\"form.value.lastName\"\r\n        name=\"lastName\"\r\n        formControlName=\"lastName\"\r\n        required\r\n      />\r\n    </div>\r\n    <div class=\"mb-3\">\r\n      <label class=\"form-label\">Carnet Identidad</label>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        [(ngModel)]=\"form.value.ci\"\r\n        name=\"ci\"\r\n        formControlName=\"ci\"\r\n        required\r\n      />\r\n    </div>\r\n    <div class=\"d-flex justify-content-center m-1\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-primary m-1\"\r\n        [disabled]=\"form.invalid\"\r\n      >\r\n        Registrar\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-secondary m-1\" routerLink=\"/clients\">\r\n        Cancelar\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ClientsListComponent } from './clients-list/clients-list.component';\r\nimport { NewClientComponent } from './new-client/new-client.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ClientsListComponent },\r\n  { path: 'new', component: NewClientComponent },\r\n  { path: 'edit/:id', component: NewClientComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ClientsRoutingModule {}\r\n"],"sourceRoot":"webpack:///"}